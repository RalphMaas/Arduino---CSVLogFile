//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EcoProject1
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Services;
    using Eco.ObjectRepresentation;
    using Eco.ObjectImplementation;
    using Eco.Subscription;
    using Eco.UmlRt;
    using Eco.UmlCodeAttributes;


    [UmlElement(Id = "d463013a-d624-45c4-80fd-73d63fd488fa")]
    public partial class Class2 : Eco.ObjectImplementation.ILoopBack2, System.ComponentModel.INotifyPropertyChanged
    {

        #region *** Constructors ***

        public Class2(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider)
        {
            this.Initialize(serviceProvider);
            try
            {
                this.ObjectCreated();
            }
            catch (System.Exception)
            {
                this.Deinitialize(serviceProvider);
                throw;
            }
        }

        // For framework internal use only
        // Constructor public for one reason only; to avoid need for ReflectionPermission in reduced trust
        public Class2(Eco.ObjectImplementation.IContent content)
        {
            this.eco_Content = content;
            content.AssertLoopbackUnassigned();
        }

        /// <summary>This method is called when the object has been created the first time (not when loaded from a db)</summary>
        partial void ObjectCreated();

        /// <summary>This method is called before the object is deleted. You can perform custom clean up or prevent the deletion by returning false or throw an exception (preferably EcoObjectDeleteException)</summary>
        partial void PreDelete(ref System.Boolean canDelete);

        #endregion *** Constructors ***

        #region *** ILoopback implementation ***

        public virtual void set_MemberByIndex(int index, object value)
        {
            throw new System.IndexOutOfRangeException();
        }

        public virtual object get_MemberByIndex(int index)
        {
            throw new System.IndexOutOfRangeException();
        }

        Eco.ObjectRepresentation.IObject Eco.ObjectRepresentation.IObjectProvider.AsIObject()
        {
            return this.eco_Content.AsIObject();
        }

        void Eco.ObjectImplementation.ILoopBack2.SetContent(Eco.ObjectImplementation.IContent content)
        {
            if ((this.eco_Content != null))
            {
                throw new System.InvalidOperationException();
            }
            this.eco_Content = content;
        }

        #endregion *** ILoopback implementation ***

        #region *** LoopbackIndex declarations ***

        public class Eco_LoopbackIndices
        {

            public const int Eco_FirstMember = 0;

            public const int Name = Eco_FirstMember;

            public const int Class1 = (Name + 1);

            public const int Eco_MemberCount = (Class1 + 1);
        }

        #endregion *** LoopbackIndex declarations ***

        #region *** IObjectProvider implementation ***

        public virtual Eco.ObjectRepresentation.IObjectInstance AsIObject()
        {
            return this.eco_Content.AsIObject();
        }

        #endregion *** IObjectProvider implementation ***

        #region *** INotifyPropertyChanged implementation ***

        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged
        {

            add { eco_Content.PropertyChanged += value; }

            remove { eco_Content.PropertyChanged -= value; }

        }

        #endregion *** INotifyPropertyChanged implementation ***

        #region *** ECO framework implementations ***

        protected Eco.ObjectImplementation.IContent eco_Content;

        protected virtual void Initialize(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider)
        {
            if ((this.eco_Content == null))
            {
                Eco.ObjectImplementation.IInternalObjectContentFactory factory = serviceProvider.GetEcoService<Eco.ObjectImplementation.IInternalObjectContentFactory>();
                factory.CreateContent(this);
                this.eco_Content.LoopbackValid();
            }
        }

        protected virtual void Deinitialize(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider)
        {
            if ((this.eco_Content == null))
            {
                Eco.ObjectImplementation.IInternalObjectContentFactory factory = serviceProvider.GetEcoService<Eco.ObjectImplementation.IInternalObjectContentFactory>();
                factory.CreateContentFailed(this.eco_Content, this);
                this.eco_Content = null;
            }
        }

        #endregion *** ECO framework implementations ***

        [UmlElement(Id = "b040b369-b8a5-4a40-bece-f3e8b3904071", Index = Eco_LoopbackIndices.Name)]
        public string Name
        {
            get
            {
                return ((string)(this.eco_Content.get_MemberByIndex(Eco_LoopbackIndices.Name)));
            }
            set
            {
                this.eco_Content.set_MemberByIndex(Eco_LoopbackIndices.Name, ((object)(value)));
            }
        }

        [UmlElement("AssociationEnd", Id = "12532b0d-4a51-478d-aac8-906470b9eac5", Index = Eco_LoopbackIndices.Class1)]
        [UmlMetaAttribute("association", typeof(EcoProject1Package.Class1Class1Class2Class2), Index = 0)]
        [UmlMetaAttribute("multiplicity", "0..1")]
        public Class1 Class1
        {
            get
            {
                return ((Class1)(this.eco_Content.get_MemberByIndex(Eco_LoopbackIndices.Class1)));
            }
            set
            {
                this.eco_Content.set_MemberByIndex(Eco_LoopbackIndices.Class1, ((object)(value)));
            }
        }
    }
}
